# Generated by Django 4.2.7 on 2025-07-24 00:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Board name', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Board description')),
                ('slug', models.SlugField(help_text='URL-friendly identifier', max_length=255, unique=True)),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], default='public', help_text='Board visibility setting', max_length=10)),
                ('allow_anonymous_feedback', models.BooleanField(default=False, help_text='Allow users to submit feedback without logging in')),
                ('require_approval', models.BooleanField(default=False, help_text='Require moderator approval for new feedback')),
                ('allow_comments', models.BooleanField(default=True, help_text='Allow comments on feedback items')),
                ('allow_voting', models.BooleanField(default=True, help_text='Allow voting on feedback items')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the board is active')),
                ('members', models.ManyToManyField(blank=True, help_text='Users with access to private boards', related_name='member_boards', to=settings.AUTH_USER_MODEL)),
                ('moderators', models.ManyToManyField(blank=True, help_text='Users who can moderate this board', related_name='moderated_boards', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(help_text='Board owner', on_delete=django.db.models.deletion.CASCADE, related_name='owned_boards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Board',
                'verbose_name_plural': 'Boards',
                'db_table': 'feedback_board',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Feedback title', max_length=255)),
                ('description', models.TextField(help_text='Detailed feedback description')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Review'), ('under_review', 'Under Review'), ('planned', 'Planned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('declined', 'Declined'), ('duplicate', 'Duplicate')], default='pending', help_text='Current status of the feedback', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', help_text='Priority level', max_length=10)),
                ('category', models.CharField(choices=[('feature', 'Feature Request'), ('bug', 'Bug Report'), ('improvement', 'Improvement'), ('question', 'Question'), ('other', 'Other')], default='feature', help_text='Feedback category', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the feedback is active')),
                ('anonymous_email', models.EmailField(blank=True, help_text='Email for anonymous feedback (optional)', max_length=254)),
                ('anonymous_name', models.CharField(blank=True, help_text='Name for anonymous feedback (optional)', max_length=255)),
                ('assigned_to', models.ForeignKey(blank=True, help_text='User assigned to handle this feedback', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_feedback', to=settings.AUTH_USER_MODEL)),
                ('author', models.ForeignKey(blank=True, help_text='Feedback author (null for anonymous)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='authored_feedback', to=settings.AUTH_USER_MODEL)),
                ('board', models.ForeignKey(help_text='Board this feedback belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='feedback_items', to='feedback.board')),
                ('downvotes', models.ManyToManyField(blank=True, help_text='Users who downvoted this feedback', related_name='downvoted_feedback', to=settings.AUTH_USER_MODEL)),
                ('upvotes', models.ManyToManyField(blank=True, help_text='Users who upvoted this feedback', related_name='upvoted_feedback', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedback',
                'db_table': 'feedback_feedback',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(help_text='Comment content')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the comment is active')),
                ('anonymous_email', models.EmailField(blank=True, help_text='Email for anonymous comments (optional)', max_length=254)),
                ('anonymous_name', models.CharField(blank=True, help_text='Name for anonymous comments (optional)', max_length=255)),
                ('author', models.ForeignKey(blank=True, help_text='Comment author (null for anonymous)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='authored_comments', to=settings.AUTH_USER_MODEL)),
                ('downvotes', models.ManyToManyField(blank=True, help_text='Users who downvoted this comment', related_name='downvoted_comments', to=settings.AUTH_USER_MODEL)),
                ('feedback', models.ForeignKey(help_text='Feedback item this comment belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='feedback.feedback')),
                ('parent', models.ForeignKey(blank=True, help_text='Parent comment for nested replies', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='feedback.comment')),
                ('upvotes', models.ManyToManyField(blank=True, help_text='Users who upvoted this comment', related_name='upvoted_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'db_table': 'feedback_comment',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='BoardInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Email address of the invitee', max_length=254)),
                ('role', models.CharField(choices=[('member', 'Member'), ('moderator', 'Moderator')], default='member', help_text='Role to assign to the invited user', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired')], default='pending', help_text='Invitation status', max_length=10)),
                ('message', models.TextField(blank=True, help_text='Optional message with the invitation')),
                ('expires_at', models.DateTimeField(help_text='When the invitation expires')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('board', models.ForeignKey(help_text='Board being invited to', on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='feedback.board')),
                ('invited_by', models.ForeignKey(help_text='User who sent the invitation', on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL)),
                ('invited_user', models.ForeignKey(blank=True, help_text='User who received the invitation (if registered)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_invitations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Board Invitation',
                'verbose_name_plural': 'Board Invitations',
                'db_table': 'feedback_board_invitation',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeedbackStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(blank=True, choices=[('draft', 'Draft'), ('pending', 'Pending Review'), ('under_review', 'Under Review'), ('planned', 'Planned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('declined', 'Declined'), ('duplicate', 'Duplicate')], help_text='Previous status', max_length=20, null=True)),
                ('new_status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Review'), ('under_review', 'Under Review'), ('planned', 'Planned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('declined', 'Declined'), ('duplicate', 'Duplicate')], help_text='New status', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Optional notes about the status change')),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(help_text='User who made the status change', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='status_changes', to=settings.AUTH_USER_MODEL)),
                ('feedback', models.ForeignKey(help_text='Feedback item', on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='feedback.feedback')),
            ],
            options={
                'verbose_name': 'Status History',
                'verbose_name_plural': 'Status History',
                'db_table': 'feedback_status_history',
                'ordering': ['-changed_at'],
                'indexes': [models.Index(fields=['feedback', 'changed_at'], name='feedback_st_feedbac_431c55_idx'), models.Index(fields=['changed_by', 'changed_at'], name='feedback_st_changed_def602_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='feedback',
            index=models.Index(fields=['status'], name='feedback_fe_status_35d074_idx'),
        ),
        migrations.AddIndex(
            model_name='feedback',
            index=models.Index(fields=['priority'], name='feedback_fe_priorit_fbe607_idx'),
        ),
        migrations.AddIndex(
            model_name='feedback',
            index=models.Index(fields=['category'], name='feedback_fe_categor_9a32a3_idx'),
        ),
        migrations.AddIndex(
            model_name='feedback',
            index=models.Index(fields=['is_active'], name='feedback_fe_is_acti_57e5c5_idx'),
        ),
        migrations.AddIndex(
            model_name='feedback',
            index=models.Index(fields=['created_at'], name='feedback_fe_created_84c297_idx'),
        ),
        migrations.AddIndex(
            model_name='feedback',
            index=models.Index(fields=['board', 'status'], name='feedback_fe_board_i_48c6b9_idx'),
        ),
        migrations.AddIndex(
            model_name='feedback',
            index=models.Index(fields=['author', 'created_at'], name='feedback_fe_author__990854_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['is_active'], name='feedback_co_is_acti_35322c_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['created_at'], name='feedback_co_created_d91795_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['feedback', 'created_at'], name='feedback_co_feedbac_304ea3_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['parent', 'created_at'], name='feedback_co_parent__13f77c_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['author', 'created_at'], name='feedback_co_author__8cc81e_idx'),
        ),
        migrations.AddIndex(
            model_name='boardinvitation',
            index=models.Index(fields=['email', 'status'], name='feedback_bo_email_3cfe62_idx'),
        ),
        migrations.AddIndex(
            model_name='boardinvitation',
            index=models.Index(fields=['board', 'status'], name='feedback_bo_board_i_76013f_idx'),
        ),
        migrations.AddIndex(
            model_name='boardinvitation',
            index=models.Index(fields=['expires_at'], name='feedback_bo_expires_8fdfc5_idx'),
        ),
        migrations.AddIndex(
            model_name='board',
            index=models.Index(fields=['visibility'], name='feedback_bo_visibil_763e42_idx'),
        ),
        migrations.AddIndex(
            model_name='board',
            index=models.Index(fields=['is_active'], name='feedback_bo_is_acti_8a3ac3_idx'),
        ),
        migrations.AddIndex(
            model_name='board',
            index=models.Index(fields=['created_at'], name='feedback_bo_created_feae89_idx'),
        ),
        migrations.AddIndex(
            model_name='board',
            index=models.Index(fields=['slug'], name='feedback_bo_slug_9ad18a_idx'),
        ),
    ]
